<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="17" failed="1" ignored="34" total="52" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="SanityTest" duration-ms="231870" started-at="2018-06-26T10:53:31Z" finished-at="2018-06-26T10:57:23Z">
    <groups>
    </groups>
    <test name="SanityTest" duration-ms="231870" started-at="2018-06-26T10:53:31Z" finished-at="2018-06-26T10:57:23Z">
      <class name="testcases.Patient_Add_TreatmentLocation">
        <test-method status="SKIP" signature="patient_add_treatmentlocation(java.util.Hashtable)[pri:0, instance:testcases.Patient_Add_TreatmentLocation@2d710f1a]" name="patient_add_treatmentlocation" duration-ms="0" started-at="2018-06-26T16:23:32Z" data-provider="getData" depends-on-methods="testcases.Patient_AddPrescriber.patient_addprescriber" finished-at="2018-06-26T16:23:32Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Patient_Add_TreatmentLocation.patient_add_treatmentlocation(java.util.Hashtable)[pri:0, instance:testcases.Patient_Add_TreatmentLocation@2d710f1a] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Patient_Add_TreatmentLocation.patient_add_treatmentlocation(java.util.Hashtable)[pri:0, instance:testcases.Patient_Add_TreatmentLocation@2d710f1a] depends on not successfully finished methodsat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:878)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- patient_add_treatmentlocation -->
      </class> <!-- testcases.Patient_Add_TreatmentLocation -->
      <class name="testcases.Patient_AddCaregiver">
        <test-method status="SKIP" signature="patient_addCaregiver(java.util.Hashtable)[pri:0, instance:testcases.Patient_AddCaregiver@1b11171f]" name="patient_addCaregiver" duration-ms="0" started-at="2018-06-26T16:23:32Z" data-provider="getData" finished-at="2018-06-26T16:23:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{CGfirstname=TestCGPeter60, CGpassword=Carepath@1, CGrelationship=Parent, CGsuffix=Sr., CGusername=darensam456+1002@gmail.com, Cgphone=6546466101, CGemail=darensam456+12@gmail.com, CGmiddlename=M, CGlastname=Parker60}]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the test Patient_AddCaregiveras the Run mode is set as NO]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the test Patient_AddCaregiveras the Run mode is set as NOat testcases.Patient_AddCaregiver.patient_addCaregiver(Patient_AddCaregiver.java:45)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- patient_addCaregiver -->
        <test-method status="PASS" signature="cleanup()[pri:0, instance:testcases.Patient_AddCaregiver@1b11171f]" name="cleanup" is-config="true" duration-ms="8" started-at="2018-06-26T16:23:32Z" finished-at="2018-06-26T16:23:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
      </class> <!-- testcases.Patient_AddCaregiver -->
      <class name="testcases.Patient_Add_SecondaryMedInsurance">
        <test-method status="SKIP" signature="patient_add_secMedInsurance(java.util.Hashtable)[pri:0, instance:testcases.Patient_Add_SecondaryMedInsurance@428640fa]" name="patient_add_secMedInsurance" duration-ms="1" started-at="2018-06-26T16:23:32Z" data-provider="getData" finished-at="2018-06-26T16:23:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Cardholderfname=TestSteve102, RelationshiptoCardholder=Self, PolicyNo=21000, username=darensam456+1002@gmail.com, CardholderDOM=June, Insurer=SecInsurer34, GroupNo=718589000, Cardholderbirthday=25, Cardholderlname=TestJohn102, phone=4864341101, phonetype=Mobile, CardholderbirthYear=1971, password=Carepath@1}]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the test Patient_Add_SecondaryMedInsuranceas the Run mode is set as NO]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the test Patient_Add_SecondaryMedInsuranceas the Run mode is set as NOat testcases.Patient_Add_SecondaryMedInsurance.patient_add_secMedInsurance(Patient_Add_SecondaryMedInsurance.java:39)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- patient_add_secMedInsurance -->
        <test-method status="PASS" signature="cleanup()[pri:0, instance:testcases.Patient_Add_SecondaryMedInsurance@428640fa]" name="cleanup" is-config="true" duration-ms="7" started-at="2018-06-26T16:23:32Z" finished-at="2018-06-26T16:23:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
      </class> <!-- testcases.Patient_Add_SecondaryMedInsurance -->
      <class name="testcases.PatientLogin">
        <test-method status="SKIP" signature="patient_Login(java.util.Hashtable)[pri:0, instance:testcases.PatientLogin@4310d43]" name="patient_Login" duration-ms="0" started-at="2018-06-26T16:23:32Z" data-provider="getData" finished-at="2018-06-26T16:23:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Carepath@1, username=darensam456+1002@gmail.com}]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the test PatientLoginas the Run mode is NO]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the test PatientLoginas the Run mode is NOat testcases.PatientLogin.patient_Login(PatientLogin.java:42)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- patient_Login -->
        <test-method status="PASS" signature="cleanup()[pri:0, instance:testcases.PatientLogin@4310d43]" name="cleanup" is-config="true" duration-ms="9" started-at="2018-06-26T16:23:32Z" finished-at="2018-06-26T16:23:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
      </class> <!-- testcases.PatientLogin -->
      <class name="testcases.PatientRegistration">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testcases.PatientRegistration@61001b64]" name="setUp" is-config="true" duration-ms="2963" started-at="2018-06-26T16:23:28Z" finished-at="2018-06-26T16:23:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="patient_registration(java.util.Hashtable)[pri:0, instance:testcases.PatientRegistration@61001b64]" name="patient_registration" duration-ms="8" started-at="2018-06-26T16:23:31Z" data-provider="getData" finished-at="2018-06-26T16:23:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Year=1963, state=NY, address2=abcd, zip=41350, MiddleName=Mr., Month=June, username=darensam456+1002@gmail.com, phone=9472090000, Date=19, phonetype=Mobile, sex=Male, LastName=Test402, City=New York, FirstName=TestPatient402, address=4109 Lane road, password=Carepath@1, suffix=Sr.}]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the test PatientRegistrationas the Run mode is set as NO]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the test PatientRegistrationas the Run mode is set as NOat testcases.PatientRegistration.patient_registration(PatientRegistration.java:44)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- patient_registration -->
        <test-method status="PASS" signature="cleanup()[pri:0, instance:testcases.PatientRegistration@61001b64]" name="cleanup" is-config="true" duration-ms="14" started-at="2018-06-26T16:23:32Z" finished-at="2018-06-26T16:23:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:testcases.PatientRegistration@61001b64]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-06-26T16:27:23Z" finished-at="2018-06-26T16:27:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.PatientRegistration -->
      <class name="testcases.ProviderRegistration_SearchExistingSite">
        <test-method status="SKIP" signature="provider_reg_searchExistingSite(java.util.Hashtable)[pri:0, instance:testcases.ProviderRegistration_SearchExistingSite@506ae4d4]" name="provider_reg_searchExistingSite" duration-ms="1" started-at="2018-06-26T16:27:23Z" data-provider="getData" finished-at="2018-06-26T16:27:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{speciality=Allergy, SearchCity=NewYork, FName=TestUserTenth, username=darensam456+2000@gmail.com, SearchSiteName=TestCarepathSite53, prenpi=2233330330, StateofLicence=NY, PreSLN=psln1234, phone=2323935311, SearchState=NY, MName=M, Role=Physician, LName=TestUserTenth, password=Carepath@1, suffix=Sr., ptype=Mobile}]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the test ProviderRegistration_SearchExistingSiteas the Run mode is set as NO]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the test ProviderRegistration_SearchExistingSiteas the Run mode is set as NOat testcases.ProviderRegistration_SearchExistingSite.provider_reg_searchExistingSite(ProviderRegistration_SearchExistingSite.java:39)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- provider_reg_searchExistingSite -->
        <test-method status="PASS" signature="cleanup()[pri:0, instance:testcases.ProviderRegistration_SearchExistingSite@506ae4d4]" name="cleanup" is-config="true" duration-ms="31" started-at="2018-06-26T16:27:23Z" finished-at="2018-06-26T16:27:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
      </class> <!-- testcases.ProviderRegistration_SearchExistingSite -->
      <class name="testcases.Patient_Edit_TreatmentLocation">
        <test-method status="SKIP" signature="patient_edit_treatmentlocation(java.util.Hashtable)[pri:0, instance:testcases.Patient_Edit_TreatmentLocation@29215f06]" name="patient_edit_treatmentlocation" duration-ms="0" started-at="2018-06-26T16:23:32Z" data-provider="getData" depends-on-methods="testcases.Patient_Add_TreatmentLocation.patient_add_treatmentlocation" finished-at="2018-06-26T16:23:32Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Patient_Edit_TreatmentLocation.patient_edit_treatmentlocation(java.util.Hashtable)[pri:0, instance:testcases.Patient_Edit_TreatmentLocation@29215f06] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Patient_Edit_TreatmentLocation.patient_edit_treatmentlocation(java.util.Hashtable)[pri:0, instance:testcases.Patient_Edit_TreatmentLocation@29215f06] depends on not successfully finished methodsat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:878)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- patient_edit_treatmentlocation -->
      </class> <!-- testcases.Patient_Edit_TreatmentLocation -->
      <class name="testcases.ProviderLogin">
        <test-method status="SKIP" signature="provider_Login(java.util.Hashtable)[pri:0, instance:testcases.ProviderLogin@6bd61f98]" name="provider_Login" duration-ms="1" started-at="2018-06-26T16:27:23Z" data-provider="getData" finished-at="2018-06-26T16:27:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Prpassword=Carepath@1, Prusername=darensam456+2000@gmail.com}]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the test ProviderLoginas the Run mode is set as NO]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the test ProviderLoginas the Run mode is set as NOat testcases.ProviderLogin.provider_Login(ProviderLogin.java:56)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- provider_Login -->
        <test-method status="PASS" signature="cleanup()[pri:0, instance:testcases.ProviderLogin@6bd61f98]" name="cleanup" is-config="true" duration-ms="60" started-at="2018-06-26T16:27:23Z" finished-at="2018-06-26T16:27:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
      </class> <!-- testcases.ProviderLogin -->
      <class name="testcases.Provider_forgotPassword">
        <test-method status="SKIP" signature="providerforgotpassword(java.util.Hashtable)[pri:0, instance:testcases.Provider_forgotPassword@48aca48b]" name="providerforgotpassword" duration-ms="0" started-at="2018-06-26T16:27:23Z" data-provider="getData" depends-on-methods="testcases.ProviderRegistration_IndependentSite.provider_reg_IndependentSite" finished-at="2018-06-26T16:27:23Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Provider_forgotPassword.providerforgotpassword(java.util.Hashtable)[pri:0, instance:testcases.Provider_forgotPassword@48aca48b] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Provider_forgotPassword.providerforgotpassword(java.util.Hashtable)[pri:0, instance:testcases.Provider_forgotPassword@48aca48b] depends on not successfully finished methodsat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:878)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- providerforgotpassword -->
      </class> <!-- testcases.Provider_forgotPassword -->
      <class name="testcases.Patient_forgotPassword">
        <test-method status="SKIP" signature="patientforgotpassword(java.util.Hashtable)[pri:0, instance:testcases.Patient_forgotPassword@54a7079e]" name="patientforgotpassword" duration-ms="0" started-at="2018-06-26T16:23:32Z" data-provider="getData" depends-on-methods="testcases.PatientLogin.patient_Login" finished-at="2018-06-26T16:23:32Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Patient_forgotPassword.patientforgotpassword(java.util.Hashtable)[pri:0, instance:testcases.Patient_forgotPassword@54a7079e] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Patient_forgotPassword.patientforgotpassword(java.util.Hashtable)[pri:0, instance:testcases.Patient_forgotPassword@54a7079e] depends on not successfully finished methodsat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:878)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- patientforgotpassword -->
      </class> <!-- testcases.Patient_forgotPassword -->
      <class name="testcases.ProviderRegistration_IndependentSite">
        <test-method status="FAIL" signature="provider_reg_IndependentSite(java.util.Hashtable)[pri:0, instance:testcases.ProviderRegistration_IndependentSite@4efac082]" name="provider_reg_IndependentSite" duration-ms="229705" started-at="2018-06-26T16:23:32Z" data-provider="getData" finished-at="2018-06-26T16:27:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{taxid=123406001, password=Chaith@12345, SitelocationPhone=3534343101, suffix=Sr., LName=Eight, PreSLN=psln1101, username=chaithtalari+356@gmail.com, address=2888 Southern Avenue, sitename=TestAutoSite208, state=GU, Role=Physician, speciality=Allergy, ptype=Mobile, phone=6570924101, organisationType=Independent, FName=TestUser, SitelocationZip=63783, SitelocationFax=5656565101, city=Tampa, MName=M, StateofLicence=NY, sitelocationtype=Prescriber's Office, prenpi=4350544101, medicalgroup=4567897101}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Locator is not correct]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Locator is not correctat org.testng.Assert.fail(Assert.java:96)at base.TestBase.getElement(TestBase.java:171)at base.TestBase.click(TestBase.java:133)at testcases.ProviderRegistration_IndependentSite.provider_reg_IndependentSite(ProviderRegistration_IndependentSite.java:205)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- provider_reg_IndependentSite -->
        <test-method status="PASS" signature="cleanup()[pri:0, instance:testcases.ProviderRegistration_IndependentSite@4efac082]" name="cleanup" is-config="true" duration-ms="267" started-at="2018-06-26T16:27:22Z" finished-at="2018-06-26T16:27:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
      </class> <!-- testcases.ProviderRegistration_IndependentSite -->
      <class name="testcases.ProviderRegistration_NewNetworkSite">
        <test-method status="SKIP" signature="provider_reg_newNetworksite(java.util.Hashtable)[pri:0, instance:testcases.ProviderRegistration_NewNetworkSite@b9b00e0]" name="provider_reg_newNetworksite" duration-ms="1" started-at="2018-06-26T16:27:23Z" data-provider="getData" finished-at="2018-06-26T16:27:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{taxid=343434540, password=Carepath@1, Site1State=FL, suffix=Sr., LName=TestUserNinth, PreSLN=psln1330, NewNetworkSiteFax2=7676767659, username=darensam456+2001@gmail.com, address=2889 Southern Avenue, state=FL, Role=Physician, speciality=Allergy, ptype=Mobile, phone=9056359001, Site1Address=120 abde, organisationType=Network, NetworkName=TestCarepath53, Site1LocationType=Hospital In Patient, FName=TestUserNinth, NetworksiteFax=5656565651, NetworksitePhone=3453432450, MName=M, city=Tampa, StateofLicence=NY, address2=abcded, NewNetworksiteZip2=34543, Site1SiteName=TestCarepathSite53, zip=45657, prenpi=6861648400, NewNetworkSitePhone2=7878787876, Site1MedGrp=Grpname126, Site1City=Tampa, Site1Add2=xys}]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the test ProviderRegistration_NewNetworkSiteas the Run mode is set as NO]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the test ProviderRegistration_NewNetworkSiteas the Run mode is set as NOat testcases.ProviderRegistration_NewNetworkSite.provider_reg_newNetworksite(ProviderRegistration_NewNetworkSite.java:38)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- provider_reg_newNetworksite -->
        <test-method status="PASS" signature="cleanup()[pri:0, instance:testcases.ProviderRegistration_NewNetworkSite@b9b00e0]" name="cleanup" is-config="true" duration-ms="62" started-at="2018-06-26T16:27:23Z" finished-at="2018-06-26T16:27:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
      </class> <!-- testcases.ProviderRegistration_NewNetworkSite -->
      <class name="testcases.Patient_Edit_SecondaryMedInsurance">
        <test-method status="SKIP" signature="patient_edit_secMedInsurance(java.util.Hashtable)[pri:0, instance:testcases.Patient_Edit_SecondaryMedInsurance@d9345cd]" name="patient_edit_secMedInsurance" duration-ms="0" started-at="2018-06-26T16:23:32Z" data-provider="getData" finished-at="2018-06-26T16:23:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{phone=4564341103, Insurer=Insurer35, password=Carepath@1, username=darensam456+1002@gmail.com}]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the test Patient_Edit_SecondaryMedInsuranceas the Run mode is set as NO]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the test Patient_Edit_SecondaryMedInsuranceas the Run mode is set as NOat testcases.Patient_Edit_SecondaryMedInsurance.patient_edit_secMedInsurance(Patient_Edit_SecondaryMedInsurance.java:38)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- patient_edit_secMedInsurance -->
        <test-method status="PASS" signature="cleanup()[pri:0, instance:testcases.Patient_Edit_SecondaryMedInsurance@d9345cd]" name="cleanup" is-config="true" duration-ms="6" started-at="2018-06-26T16:23:32Z" finished-at="2018-06-26T16:23:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
      </class> <!-- testcases.Patient_Edit_SecondaryMedInsurance -->
      <class name="testcases.Patient_Edit_PrescriberDetails">
        <test-method status="SKIP" signature="patient_editprescriber(java.util.Hashtable)[pri:0, instance:testcases.Patient_Edit_PrescriberDetails@2dc54ad4]" name="patient_editprescriber" duration-ms="0" started-at="2018-06-26T16:23:32Z" data-provider="getData" depends-on-methods="testcases.Patient_AddPrescriber.patient_addprescriber" finished-at="2018-06-26T16:23:32Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Patient_Edit_PrescriberDetails.patient_editprescriber(java.util.Hashtable)[pri:0, instance:testcases.Patient_Edit_PrescriberDetails@2dc54ad4] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Patient_Edit_PrescriberDetails.patient_editprescriber(java.util.Hashtable)[pri:0, instance:testcases.Patient_Edit_PrescriberDetails@2dc54ad4] depends on not successfully finished methodsat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:878)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- patient_editprescriber -->
      </class> <!-- testcases.Patient_Edit_PrescriberDetails -->
      <class name="testcases.Patient_Edit_PrimaryMedInsurance">
        <test-method status="SKIP" signature="patient_edit_primaryMedInsurance(java.util.Hashtable)[pri:0, instance:testcases.Patient_Edit_PrimaryMedInsurance@4b0d79fc]" name="patient_edit_primaryMedInsurance" duration-ms="0" started-at="2018-06-26T16:23:32Z" data-provider="getData" depends-on-methods="testcases.Patient_Add_PrimaryMedInsurance.patient_add_primaryInsurance" finished-at="2018-06-26T16:23:32Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Patient_Edit_PrimaryMedInsurance.patient_edit_primaryMedInsurance(java.util.Hashtable)[pri:0, instance:testcases.Patient_Edit_PrimaryMedInsurance@4b0d79fc] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Patient_Edit_PrimaryMedInsurance.patient_edit_primaryMedInsurance(java.util.Hashtable)[pri:0, instance:testcases.Patient_Edit_PrimaryMedInsurance@4b0d79fc] depends on not successfully finished methodsat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:878)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- patient_edit_primaryMedInsurance -->
      </class> <!-- testcases.Patient_Edit_PrimaryMedInsurance -->
      <class name="testcases.Patient_Add_PrimaryMedInsurance">
        <test-method status="SKIP" signature="patient_add_primaryInsurance(java.util.Hashtable)[pri:0, instance:testcases.Patient_Add_PrimaryMedInsurance@55634720]" name="patient_add_primaryInsurance" duration-ms="1" started-at="2018-06-26T16:23:32Z" data-provider="getData" finished-at="2018-06-26T16:23:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Cardholderfname=TestSteve48, RelationshiptoCardholder=Self, PolicyNo=21510, username=darensam456+1002@gmail.com, CardholderDOM=May, Insurer=Insurer34, GroupNo=7185890100, Cardholderbirthday=24, Cardholderlname=TestJohn48, phone=4564341101, phonetype=Mobile, CardholderbirthYear=1971, password=Carepath@1}]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the test Add Primary Insuranceas the Run mode is set as NO]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the test Add Primary Insuranceas the Run mode is set as NOat testcases.Patient_Add_PrimaryMedInsurance.patient_add_primaryInsurance(Patient_Add_PrimaryMedInsurance.java:39)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- patient_add_primaryInsurance -->
        <test-method status="PASS" signature="cleanup()[pri:0, instance:testcases.Patient_Add_PrimaryMedInsurance@55634720]" name="cleanup" is-config="true" duration-ms="7" started-at="2018-06-26T16:23:32Z" finished-at="2018-06-26T16:23:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
      </class> <!-- testcases.Patient_Add_PrimaryMedInsurance -->
      <class name="testcases.Patient_AddPrescriber">
        <test-method status="SKIP" signature="patient_addprescriber(java.util.Hashtable)[pri:0, instance:testcases.Patient_AddPrescriber@1151e434]" name="patient_addprescriber" duration-ms="1" started-at="2018-06-26T16:23:32Z" data-provider="getData" finished-at="2018-06-26T16:23:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{MI=MI, Zip=10012, Suffix=Jr., Fax=9176914310, PrescriberLastName=TestPresMark62, Phone=7082894325, username=darensam456+1002@gmail.com, Specialty=Pain Medicine, phonetype=Mobile, City=New York, PrescriberFirstName=TestPresJohn62, State=NY, Address1=41767 Longview Avenue, password=Carepath@1, PracticeName=TestPracJohn62}]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the test Patient_AddPrescriberas the Run mode is set as NO]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the test Patient_AddPrescriberas the Run mode is set as NOat testcases.Patient_AddPrescriber.patient_addprescriber(Patient_AddPrescriber.java:39)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- patient_addprescriber -->
        <test-method status="PASS" signature="cleanup()[pri:0, instance:testcases.Patient_AddPrescriber@1151e434]" name="cleanup" is-config="true" duration-ms="8" started-at="2018-06-26T16:23:32Z" finished-at="2018-06-26T16:23:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
      </class> <!-- testcases.Patient_AddPrescriber -->
      <class name="testcases.Patient_EditandSave">
        <test-method status="SKIP" signature="patientdetails_editandsave(java.util.Hashtable)[pri:0, instance:testcases.Patient_EditandSave@27f981c6]" name="patientdetails_editandsave" duration-ms="1" started-at="2018-06-26T16:23:32Z" data-provider="getData" finished-at="2018-06-26T16:23:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Carepath@1, username=darensam456+1002@gmail.com}]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the test Patient_EditandSaveas the Run mode is set as NO]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the test Patient_EditandSaveas the Run mode is set as NOat testcases.Patient_EditandSave.patientdetails_editandsave(Patient_EditandSave.java:41)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- patientdetails_editandsave -->
        <test-method status="PASS" signature="cleanup()[pri:0, instance:testcases.Patient_EditandSave@27f981c6]" name="cleanup" is-config="true" duration-ms="7" started-at="2018-06-26T16:23:32Z" finished-at="2018-06-26T16:23:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
      </class> <!-- testcases.Patient_EditandSave -->
    </test> <!-- SanityTest -->
  </suite> <!-- SanityTest -->
</testng-results>
